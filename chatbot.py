from tkinter import *
from tkinter import ttk
from PIL import Image, ImageTk
import webbrowser

class ChatBot:
    def __init__(self, root):
        self.root = root
        self.root.title("ChatBot")
        self.root.geometry("730x620+0+0")
        self.root.bind('<Return>', self.enter_fun)
        
        main_frame = Frame(self.root, bd=4, bg='powder blue', width=610)
        main_frame.pack()
        
        img_chat = Image.open(r'C:\Users\yashshekh\Downloads\friendly-chatbot.jpeg')
        img_chat = img_chat.resize((200, 70), Image.LANCZOS)    
        self.photoimg = ImageTk.PhotoImage(img_chat)
        
        Title_label = Label(main_frame, bd=3, relief=RAISED, anchor='nw', width=730, compound=LEFT, image=self.photoimg, text='CHAT ME', font=('arial', 30, 'bold'), fg='green', bg='white')
        Title_label.pack(side=TOP)
        
        self.scroll_y = ttk.Scrollbar(main_frame, orient=VERTICAL)
        self.text = Text(main_frame, width=65, height=20, bd=3, relief=RAISED, font=('arial', 14), yscrollcommand=self.scroll_y.set)
        self.scroll_y.pack(side=RIGHT, fill=Y)
        self.text.pack()
        
        btn_frame = Frame(self.root, bd=4, bg="white", width=730)
        btn_frame.pack()
        
        label_1 = Label(btn_frame, text="Type Something", font=('arial', 14, 'bold'), fg='green', bg='white')
        label_1.grid(row=0, column=0, padx=5, pady=5, sticky=W)
        
        self.entry = StringVar()
        self.entry1 = ttk.Entry(btn_frame, textvariable=self.entry, width=40, font=('times new roman', 15, 'bold'))
        self.entry1.grid(row=0, column=1, padx=5, sticky=W)
        
        self.send = Button(btn_frame, text="Send>>", command=self.send, font=('arial', 14, 'bold'), width=8, bg='green',)
        self.send.grid(row=0, column=2, padx=5, sticky=W)
        
        self.clear = Button(btn_frame, text="Clear Data", command=self.clear, font=('arial', 14, 'bold'), width=8, bg='red', fg="white")
        self.clear.grid(row=1, column=0, padx=5, sticky=W)
        
        self.msg = ''
        self.label_11 = Label(btn_frame, text=self.msg, font=('arial', 14, 'bold'), fg='red', bg='white')
        self.label_11.grid(row=1, column=1, padx=5, sticky=W)
        
    def enter_fun(self, event):
        self.send.invoke()
        self.entry.set('')
        
    def clear(self):
        self.text.delete('1.0', END)
        self.entry.set('')
        
    def send(self):
        send = '\t\t\t' + 'You: ' + self.entry.get()
        self.text.insert(END, '\n' + send)
        self.text.yview(END)
        
        user_input = self.entry.get().lower()  # Convert user input to lowercase for case-insensitive matching
        
        responses = {
            'hello': 'Hi',
            'hi': 'Hi',
            'hey': 'Hi',
            'how are you?': 'Fine and You',
            'fantastic': 'Nice to Hear',
            'who created you': 'Yash, using python',
            'can you speak hindi': 'I am still learning it...',
            'what is machine learning?': 'Machine learning is incredibly complex and how it works varies depending on the task and the algorithm used to accomplish it.',
            'what is facial recognition?': 'Facial recognition uses computer-generated filters to transform face images into numerical expressions that can be compared to determine their similarity. These filters are usually generated by using deep “learning,” which uses artificial neural networks to process data.',
            'what is python programming?': 'Python is an open-source, general-purpose programming language that is used to build websites, software, automate tasks, and conduct data analysis. It is widely considered one of the easiest programming languages for beginners to learn.',
            'what is chatbot?': 'A chatbot or chatterbot is a software application used to conduct an on-line chat conversation via text or text-to-speech, in lieu of providing direct contact with a live human agent.',
            'contact info': 'Contact me at <a href="mailto:hkun89828@gmail.com">hkun89828@gmail.com</a>',
            'bye': 'Thank you for your time. Will meet again!!!...'
        }
        
        if user_input in responses:
            bot_response = 'Bot: ' + responses[user_input]
        else:
            bot_response = 'Bot: Sorry I did not get it, I am just a simple friendly chatbot.'
            
        self.text.insert(END, '\n\n' + bot_response)
          # Open email client when "Contact me" link is clicked
        if 'contact info' in responses and user_input == 'contact info':
            webbrowser.open_new_tab("mailto:hkun89828@gmail.com")
        
if __name__ == "__main__":
    root = Tk()
    obj = ChatBot(root)
    root.mainloop()
